
<%= form_with(model: @article, local: true, multipart: true, class: "max-w-2xl bg-white p-6 mt-5 mx-auto") do |form| %>
<h1 class="text-xl md:text-2xl lg:text-3xl font-bold mb-3">New theory</h1>  
<% if article.errors.any? %>
    <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
      <strong class="font-bold"><%= pluralize(article.errors.count, "error") %> prohibited this article from being saved:</strong>
      <ul class="mt-2 list-disc list-inside">
        <% article.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="mb-6">
    <%= form.label :title, class: "block text-gray-700 text-sm font-bold mb-2" %>
    <%= form.text_field :title, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:ring focus:border-blue-300" %>
  </div>

  <div class="mb-6">
    <%= form.label :summary, class: "block text-gray-700 text-sm font-bold mb-2" %>
    <%= form.text_area :summary, rows: 3, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:ring focus:border-blue-300" %>
    <small class="text-gray-600">Briefly summarize your article (max 200 characters)</small>
  </div>

  <div class="mb-6">
    <%= form.label :body, class: "block text-gray-700 text-sm font-bold mb-2" %>
    <%= form.text_area :body, rows: 10, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:ring focus:border-blue-300" %>
    <small class="text-gray-600">Use #tag to add tags to your article (e.g., #ruby #rails)</small>
  </div>

  <div class="mb-6">
    <%= form.label :images, class: "block text-gray-700 text-sm font-bold mb-2" %>
    <div class="mt-2 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md">
      <div class="space-y-1 text-center">
        <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48" aria-hidden="true">
          <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
        </svg>
        <div class="flex text-sm text-gray-600">
          <label for="file-upload" class="relative cursor-pointer bg-white rounded-md font-medium text-orange-600 hover:text-orange-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-orange-500">
            <span>Upload images</span>
            <%= form.file_field :images, multiple: true, accept: 'image/*', class: "sr-only", id: "file-upload" %>
          </label>
          <p class="pl-1">or drag and drop</p>
        </div>
        <p class="text-xs text-gray-500">PNG, JPG, GIF up to 10MB</p>
      </div>
    </div>
    <small class="text-gray-600 mt-2 block">You can upload up to <%= 3 - @article.documents.count %> more image(s)</small>
  </div>

  <div id="image-preview" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 mb-6">
    <% article.documents.each do |document| %>
      <div class="relative">
        <%= image_tag url_for(document.file), class: "w-full h-48 object-cover rounded-lg" %>
        <%= link_to 'Delete', article_document_path(article, document), method: :delete, data: { confirm: 'Are you sure?' }, class: "absolute top-2 right-2 bg-red-500 text-white rounded-full p-1 hover:bg-red-600" %>
      </div>
    <% end %>
  </div>

  <div class="actions">
    <%= form.submit class: "w-full bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline transition duration-300" %>
  </div>
<% end %>

<script>
document.addEventListener('DOMContentLoaded', (event) => {
  const fileInput = document.getElementById('file-upload');
  const previewContainer = document.getElementById('image-preview');

  fileInput.addEventListener('change', function(e) {
    const files = e.target.files;

    for (let i = 0; i < files.length; i++) {
      const file = files[i];
      const reader = new FileReader();

      reader.onload = function(e) {
        const div = document.createElement('div');
        div.className = 'relative';
        div.innerHTML = `
          <img src="${e.target.result}" class="w-full h-48 object-cover rounded-lg" />
          <button class="absolute top-2 right-2 bg-red-500 text-white rounded-full p-1 hover:bg-red-600">Remove</button>
        `;
        previewContainer.appendChild(div);

        div.querySelector('button').addEventListener('click', function() {
          div.remove();
        });
      }

      reader.readAsDataURL(file);
    }
  });
});
</script>